server:
  port: 8080
app:
  default-broker: ${APP_DEFAULT_BROKER:kafka} # rabbit or kafka
spring:
  application:
    name: module-c-core
  cloud:
    stream:
      bindings:
        rabbit-out-0:
          destination: ${LABS64_DESTINATION:labs64-topic}
          binder: rabbit
        kafka-out-0:
          destination: ${LABS64_DESTINATION:labs64-topic}
          binder: kafka
      rabbit:
        bindings:
          rabbit-out-0:
            producer:
              exchangeType: topic
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS:kafka.default.svc.cluster.local:9092}
          auto-create-topics: true
          configuration:
            security.protocol: ${KAFKA_SECURITY_PROTOCOL:SASL_PLAINTEXT}
            sasl.mechanism: ${KAFKA_SASL_MECHANISM:SCRAM-SHA-256}
            sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG}
          health-indicator:
            enabled: true
        bindings:
          kafka-out-0:
            producer:
              configuration:
                key.serializer: org.apache.kafka.common.serialization.StringSerializer
                value.serializer: org.apache.kafka.common.serialization.ByteArraySerializer
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq.default.svc.cluster.local}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

logging:
  level:
    io.labs64: DEBUG
    org.springframework.cloud.stream: INFO
    org.springframework.kafka: INFO
