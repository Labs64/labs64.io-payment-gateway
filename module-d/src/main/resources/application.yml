server:
  port: 8080
app:
  default-broker: ${APP_DEFAULT_BROKER:kafka} # rabbit or kafka
spring:
  application:
    name: module-d-core
  cloud:
    stream:
      bindings:
        receive-in-0:
          destination: ${LABS64_DESTINATION:labs64-topic}
          group: subscriber-group
          binder: ${app.default-broker:rabbit}
      binders:
        rabbit:
          type: rabbit
        kafka:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: ${KAFKA_BROKERS:kafka.default.svc.cluster.local:9092}
                      configuration:
                        security.protocol: ${KAFKA_SECURITY_PROTOCOL:SASL_PLAINTEXT}
                        sasl.mechanism: ${KAFKA_SASL_MECHANISM:SCRAM-SHA-256}
                        sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG}
      kafka:
        bindings:
          receive-in-0:
            consumer:
              configuration:
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq.default.svc.cluster.local}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

logging:
  level:
    io.labs64: DEBUG
    org.springframework.cloud.stream: INFO
    org.springframework.kafka: INFO
